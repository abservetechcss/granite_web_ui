import { IOrganisation } from '../api/organisation/interfaces/IOrganisation';
import { IPracticeManagementCompany } from '../api/practice_management_company/interfaces/IPracticeManagementCompany';
import { RestOrganisation } from '../api/organisation/RestOrganisation';
import { RestPracticeManagementCompany } from '../api/practice_management_company/RestPracticeManagmentCompany';
import { Container } from 'inversify';
import { RestAccount } from '../api/account/RestAccount';
import { IAccount } from '../api/account/interfaces/IAccount';
import { TYPES } from './types';
import { IStorage } from '../api/storage/interfaces/IStorage';
import { RestStorage } from '../api/storage/RestStorage';
import { IFile } from '../api/file/interfaces/IFile';
import { RestFile } from '../api/file/RestFile';
import Zip from '../services/compression/zip';
import { ICompression } from '../services/compression/interface/ICompression';
import { ISymmetricDecryption } from '../services/decryption/interface/ISymmetricDecryption';
import AESDecryption from '../services/decryption/AESDecryption';
import { IASymmetricDecryption } from '../services/decryption/interface/IASymmetricDecryption';
import RSADecryption from '../services/decryption/RSADecryption';
import { ISymmetricEncryption } from '../services/encryption/interface/ISymmetricEncryption';
import AESEncryption from '../services/encryption/AESEncryption';
import { IASymmetricEncryption } from '../services/encryption/interface/IASymmetricEncryption';
import RSAEncryption from '../services/encryption/RSAEncryption';
import { IPatient } from '../api/patient/interfaces/IPatient';
import { RestPatient } from '../api/patient/RestPatient';
import Unzip from '../services/expand/unzip';
import { IExpand } from '../services/expand/interface/IExpand';

export const container = new Container();
container.bind<IOrganisation>(TYPES.IOrganisation).to(RestOrganisation);
container.bind<IPracticeManagementCompany>(TYPES.IPracticeManagementCompany).to(RestPracticeManagementCompany);
container.bind<IAccount>(TYPES.IAccount).to(RestAccount);
container.bind<IStorage>(TYPES.IStorage).to(RestStorage);
container.bind<IFile>(TYPES.IFile).to(RestFile);
container.bind<IPatient>(TYPES.IPatient).to(RestPatient);
container.bind<ICompression>(TYPES.ICompression).to(Zip);
container.bind<IExpand>(TYPES.IExpand).to(Unzip);
container.bind<ISymmetricDecryption>(TYPES.ISymmetricDecryption).to(AESDecryption);
container.bind<IASymmetricDecryption>(TYPES.IASymmetricDecryption).to(RSADecryption);
container.bind<ISymmetricEncryption>(TYPES.ISymmetricEncryption).to(AESEncryption);
container.bind<IASymmetricEncryption>(TYPES.IASymmetricEncryption).to(RSAEncryption);

